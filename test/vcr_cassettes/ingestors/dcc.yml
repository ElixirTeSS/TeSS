---
http_interactions:
- request:
    method: get
    uri: https://dcc-po.nl/agenda/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - openresty
      Date:
      - Mon, 16 Sep 2024 12:10:29 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Content-Length:
      - '70976'
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Access-Control-Allow-Origin:
      - https://dcc-po.nl
      Content-Security-Policy:
      - 'connect-src ''self'' yoast.com surfnl.containers.piwik.pro surfnl.piwik.pro
        eu-api.friendlycaptcha.eu api.friendlycaptcha.com api.redirect.li; default-src
        ''self''; font-src ''self'' data: surfnl.containers.piwik.pro surfnl.piwik.pro;
        frame-src ''self'' *.vimeo.com *.youtube.com; img-src ''self'' data: *.gravatar.com
        ps.w.org surfnl.containers.piwik.pro surfnl.piwik.pro; script-src ''self''
        ''unsafe-inline'' ''unsafe-eval'' surfnl.containers.piwik.pro polyfill.io
        ''wasm-unsafe-eval'' eu-api.friendlycaptcha.eu api.friendlycaptcha.com *.cloudflare.com
        surfnl.piwik.pro; style-src ''self'' ''unsafe-inline'' yoast.com surfnl.containers.piwik.pro
        surfnl.piwik.pro; worker-src blob:;'
      Age:
      - '1497'
      X-Varnish-Cache:
      - HIT
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 02 Jan 2019 11:00:00 GMT
recorded_with: VCR 6.2.0
