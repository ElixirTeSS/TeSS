---
http_interactions:
- request:
    method: get
    uri: https://dcc-po.nl/agenda/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Fri, 03 Oct 2025 08:50:47 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - https://dcc-po.nl
      Content-Security-Policy:
      - 'connect-src ''self'' yoast.com surfnl.containers.piwik.pro surfnl.piwik.pro
        eu-api.friendlycaptcha.eu api.friendlycaptcha.com api.redirect.li eu.frcapi.com;
        default-src ''self''; font-src ''self'' data: surfnl.containers.piwik.pro
        surfnl.piwik.pro; frame-src ''self'' *.vimeo.com *.youtube.com *.openstreetmap.org
        eu.frcapi.com; img-src ''self'' data: *.gravatar.com ps.w.org surfnl.containers.piwik.pro
        surfnl.piwik.pro; script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' surfnl.containers.piwik.pro
        ''wasm-unsafe-eval'' eu-api.friendlycaptcha.eu api.friendlycaptcha.com *.cloudflare.com
        surfnl.piwik.pro eu.frcapi.com; style-src ''self'' ''unsafe-inline'' yoast.com
        surfnl.containers.piwik.pro surfnl.piwik.pro; worker-src blob:;'
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=63072000
      X-Powered-By:
      - PleskLin
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 02 Jan 2025 23:00:00 GMT
recorded_with: VCR 6.2.0
