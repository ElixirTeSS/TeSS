version: '3.8'
services:
  app:
    container_name: ${PREFIX}-app
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    image: ${PREFIX}-app
    restart: unless-stopped
    env_file: .env
    depends_on:
      - db
      - solr
      - redis
    ports:
      - '3000:3000'
    volumes:
      - .:/code
      - bundle-cache:/usr/local/bundle
      - node_modules:/code/node_modules
    environment:
      RAILS_ENV: development
      RAILS_LOG_TO_STDOUT: 'true'
  db:
    container_name: ${PREFIX}-db
    logging:
      driver: none
    image: postgres:14.2
    env_file: .env
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s
    volumes:
      - db-data:/var/lib/postgresql/data
  solr:
    container_name: ${PREFIX}-solr
    image: solr:8
    volumes:
      - solr-data:/var/solr
      - ./solr:/opt/solr/server/solr/configsets/development
    command:
      - solr-precreate
      - tess
      - /opt/solr/server/solr/configsets/development
    ports:
      - '8984:8983'
  redis:
    container_name: ${PREFIX}-redis
    image: redis:6
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30
    volumes:
      - redis-data:/data
  sidekiq:
    container_name: ${PREFIX}-sidekiq
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    image: ${PREFIX}-app
    depends_on:
      - app
      - db
      - redis
    volumes:
      - .:/code
      - bundle-cache:/usr/local/bundle
    env_file: .env
    environment:
      RAILS_ENV: development
    command: bundle exec sidekiq
  test:
    profiles:
      - test
    depends_on:
      - test-db
      - redis
    container_name: ${PREFIX}-test
    build:
      context: .
      dockerfile: Dockerfile
    image: ${PREFIX}-app
    volumes:
      - .:/code
      - bundle-cache:/usr/local/bundle
      - node_modules:/code/node_modules
    environment:
      RAILS_ENV: test
      DB_HOST: test-db
      DB_NAME: tess-test
      DB_USER: tess-test
      DB_PASSWORD: tess-test
      REDIS_TEST_URL: redis://redis:6379/0
    command: sh -c "rake db:test:prepare && rails test"
  test-db:
    profiles:
      - test
    container_name: ${PREFIX}-test-db
    logging:
      driver: none
    image: postgres:14.2
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: tess-test
      POSTGRES_USER: tess-test
      POSTGRES_PASSWORD: tess-test
    volumes:
      - test-db-data:/var/lib/postgresql/data
volumes:
  db-data:
    name: ${PREFIX}_db-data
  solr-data:
    name: ${PREFIX}_solr-data
  redis-data:
    name: ${PREFIX}_redis-data
  bundle-cache:
    name: ${PREFIX}_bundle-cache
  node_modules:
    name: ${PREFIX}_node_modules
  test-db-data:
    name: ${PREFIX}_test-db-data
