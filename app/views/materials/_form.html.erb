<%= simple_form_for @material, :html => { :id => 'material_form' } do |f| %>

  <%= render partial: 'common/error_summary', locals: { resource: @material } %>

  <%# Necessary to allow removal of all field locks %>
  <%= hidden_field_tag 'material[locked_fields][]', '' %>

  <% # Required Fields    -%>

  <!-- Field: Title -->
  <%= f.input :title, as: :string, field_lock: true, input_html: { title: t('materials.hints.title') } %>

  <!-- Field: Description -->
  <%= f.input :description, as: :markdown_area, field_lock: true, label: 'Description',
              input_html: { rows: '5', title: t('materials.hints.description') } %>

  <!-- Field: Keywords -->
  <%= f.multi_input :keywords, required: true, title: t('materials.hints.keywords') %>

  <!-- Field: URL -->
  <%= render partial: 'common/url_checker',
             locals: { f: f, url: materials_check_exists_path, title: t('materials.hints.url') } %>

  <!-- Field: Licence -->
  <%= f.input :licence, collection: licence_options_for_select, input_html: { title: t('materials.hints.licence') },
              prompt: 'Select a licence...', errors: @material.errors[:licence], field_lock: true %>

  <!-- Field: Status -->
  <%= f.input :status, collection: MaterialStatusDictionary.instance.options_for_select, prompt: 'Select a status...',
              errors: @material.errors[:status], input_html: { title: t('materials.hints.status') },
              field_lock: true %>

  <!-- Field: Contact -->
  <%= f.input :contact, input_html: { rows: '5', title: t('materials.hints.contact') }, field_lock: true %>


  <hr/>
  <h4>Recommended</h4>

  <!-- Field: DOI -->
  <%= f.input :doi, field_lock: true, input_html: { title: t('materials.hints.doi') } %>

  <!-- Field: Version -->
  <%= f.input :version, input_html: { title: t('materials.hints.version') }, field_lock: true %>

  <!-- Field: Provider -->
  <%= f.input :content_provider_id, collection: current_user.get_editable_providers, label_method: :title, value_method: :id,
              include_blank: true, field_lock: true, label: t('materials.hints.providers') %>

  <!-- Field: Authors -->
  <%= f.multi_input :authors, suggestions: people_suggestions, title: t('materials.hints.authors') %>

  <!-- Field: Contributors -->
  <%= f.multi_input :contributors, suggestions: people_suggestions, title: t('materials.hints.contributors') %>

  <!-- Field: Events -->
  <%= f.autocompleter :events, input_html: { title: t('materials.hints.events') } %>

  <!-- Field: Target Audience -->
  <%= f.dropdown :target_audience, options: TargetAudienceDictionary.instance.options_for_select, label: 'Target audiences',
                 errors: @material.errors[:target_audience], title: t('events.hints.targets') %>

  <!-- Field: Prerequisites -->
  <%= f.input :prerequisites, as: :markdown_area, field_lock: true,
              input_html: { rows: '3', title: t('materials.hints.prerequisites') } %>

  <!-- Field: Level -->
  <%= f.input :difficulty_level, collection: DifficultyDictionary.instance.options_for_select,
              label: 'Competency level', prompt: 'Select a difficulty level...', field_lock: true,
              errors: @material.errors[:difficulty_level], input_html: { title: t('materials.hints.difficulty') } %>

  <!-- Field: Learning Objectives-->
  <%= f.input :learning_objectives, as: :markdown_area, field_lock: true,
              input_html: { rows: '3', title: t('materials.hints.objectives') } %>

  <!-- Field: Date Created -->
  <%= f.input :date_created, as: :date_picker, field_lock: true, input_html: { title: t('materials.hints.date_created') } %>

  <hr/>
  <h4>Optional</h4>

  <!-- Field: Fields -->
  <% if !TeSS::Config.feature['disabled'].include? 'fields_of_research' %>
    <%= render partial: 'common/tree',
               locals: { f: f,
                         resource: @material,
                         field_name: 'fields',
                         field_label: 'Fields of Research',
                         button_label: 'FoR Codes',
                         title: t('materials.hints.fields') } %>
  <% end %>

  <!-- Field: Dates -->
  <%= f.input :date_modified, as: :date_picker, field_lock: true, input_html: { title: t('materials.hints.date_modified') } %>
  <%= f.input :date_published, as: :date_picker, field_lock: true, input_html: { title: t('materials.hints.date_published') } %>

  <!-- Field: Resource Type -->
  <%= f.dropdown :resource_type, options: MaterialTypeDictionary.instance.options_for_select, label: 'Resource types',
                 errors: @material.errors[:material_types], title: t('materials.hints.type') %>

  <!-- Field: Other Types -->
  <% if !TeSS::Config.feature['disabled'].include? 'other_types' %>
    <%= f.input :other_types, input_html: { title: t('materials.hints.other_types') }, field_lock: true %>
  <% end %>

  <!-- Field: Subsets -->
  <% if !TeSS::Config.feature['disabled'].include? 'subsets' %>
    <%= f.multi_input :subsets, title: t('materials.hints.subsets') %>
  <% end %>

  <!-- Field: Scientific Topics -->
  <% if !TeSS::Config.feature['disabled'].include? 'topics' %>
    <%= f.autocompleter :scientific_topics, url: edam_topics_path, template: 'autocompleter/term',
                        id_field: :uri, label_field: :preferred_label %>
  <% end %>

  <!-- Field: Syllabus -->
  <% if !TeSS::Config.feature['disabled'].include? 'syllabus' %>
    <%= f.input :syllabus, as: :markdown_area, field_lock: true,
                input_html: { rows: '3', title: t('materials.hints.syllabus') } %>
  <% end %>

  <!-- Field: External Resources -->
  <div class="form-group" id="external-resources">
    <%= f.label :external_resources %>
    <%= f.field_lock :external_resources %>

    <div id="external-resources-list">
      <% @material.external_resources.each_with_index do |external_resource, index| %>
        <%= render partial: 'common/external_resource_form',
                   locals: { form_name: 'material', index: index, external_resource: external_resource } %>
      <% end %>
    </div>

    <!-- Fairshare: check disabled -->
    <% if !TeSS::Config.feature['disabled'].include? 'fairshare' %>
      <div class="row">
        <%= render :partial => 'common/fairsharing_suggestions', :locals => { :title_element => 'material_title' } %>
      </div>
    <% end %>

    <!-- BioTools: check disabled -->
    <% if !TeSS::Config.feature['disabled'].include? 'biotools' %>
      <div class="row">
        <%= render :partial => 'common/biotools_suggestions', :locals => { :title_element => 'material_title' } %>
      </div>
    <% end %>

    <a href="#" id="add-external-resource-btn" class="btn btn-info">
      <i class="fa fa-plus"></i> Add external resource
    </a>
  </div>

  <!-- Nodes: check feature enabled -->
  <% if TeSS::Config.feature['nodes'] %>
    <%= f.dropdown :node_ids, options: format_for_dropdown(Node.order(:name).all), label: 'Nodes' %>
  <% end %>

  <!-- Operations: check disabled -->
  <% if !TeSS::Config.feature['disabled'].include? 'operations' %>
    <%= f.autocompleter :operations, url: edam_operations_path, template: 'autocompleter/term',
                        id_field: :uri, label_field: :preferred_label %>
  <% end %>

  <!-- Form Buttons -->
  <div class="form-group">
    <%= f.submit (f.object.new_record? ? "Register" : "Update") + " training material", :class => 'btn btn-primary' %>
    <%= link_to 'Back', :back, :class => "btn btn-info" %>
    <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                materials_path, :class => 'btn btn-default' %>
  </div>
<% end %>

<div id="external-resource-template" style="display: none">
  <%= render partial: 'common/external_resource_form',
             locals: { form_name: 'material', external_resource: ExternalResource.new } %>
</div>


<script type="text/javascript">
    function removeSuggestion(suggestion) {
        s = suggestion.replace(/[^a-zA-Z]/g, '');
        if (confirm("Are you sure you'd like to remove '" + suggestion + "'?")) {
            $("#add-topic-" + s).fadeOut(300, function () {
                $(this).remove();
            });
            $("#hidden-suggestion-" + s).remove();
            return true;
        } else {
            return false;
        }
    }
</script>
