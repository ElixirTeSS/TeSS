<%= simple_form_for @content_provider, html: { class: "content_provider", multipart: true } do |f| %>

  <%= render partial: 'common/error_summary', locals: { resource: @content_provider } %>

  <%= f.input :title, as: :string %>

  <%= render partial: 'common/url_checker', locals: { f: f, url: content_providers_check_exists_path, title: '' } %>

  <%= f.input :contact, as: :string %>

  <%= f.input :description, as: :markdown_area, input_html: { rows: '10' } %>

  <div class="form-group">
    <%= render partial: 'common/image_form', locals: { form: f } %>
  </div>

  <%= f.input :content_provider_type, label: 'Type', collection: ContentProvider::PROVIDER_TYPE, include_blank: false %>

  <% if current_user.is_admin? %>
    <%= f.autocompleter :user, url: users_path, transform_function: 'users', template: 'autocompleter/content_provider_owner',
                        singleton: true,
                        label_field: :name %>
  <% end %>

  <% if !TeSS::Config.feature['disabled'].include? 'approved_editors' %>
    <%= f.autocompleter :approved_editors, url: users_path, transform_function: 'users', template: 'autocompleter/user',
                        form_field_name: 'content_provider[approved_editors]',
                        label_field: :name,
                        id_field: :username,
                        existing_items_method: :editors %>
  <% end %>

  <%= f.multi_input :keywords %>

  <!-- Nodes: check feature enabled -->
  <% if TeSS::Config.feature['nodes'] %>
    <%= f.input :node_id, label: 'ELIXIR node', collection: Node.all, label_method: :title %>
  <% end %>

  <div class="form-group">
    <%= f.submit (f.object.new_record? ? "Register" : "Update") + " content provider", class: 'btn btn-primary' %>
    <%= link_to 'Back', content_providers_path, class: "btn btn-info" %>
    <%= link_to t('.cancel', default: t("helpers.links.cancel")),
                content_providers_path, class: 'btn btn-default' %>
  </div>
<% end %>
