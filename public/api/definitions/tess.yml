openapi: 3.0.1
info:
  title: TeSS JSON-API
  description: An implementation of the API for ELIXIR's TeSS, following JSON-API
    (http://jsonapi.org/) standards.
  contact:
    email: tess-support@googlegroups.com
  license:
    name: BSD 3-Clause License
    url: http://www.opensource.org/licenses/BSD-3-Clause
  version: 1.3.0
servers:
  - url: https://tess.elixir-europe.org/
  - url: https://dev.tess.elixir-europe.org/
paths:
  /events:
    get:
      tags:
        - events
      parameters:
        - name: q
          in: query
          description: Search keywords.
          schema:
            type: string
        - name: page_number
          in: query
          description: The page of the collection to view.
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: The number of results to return per page.
          schema:
            type: integer
            default: 30
        - name: sort
          in: query
          description: |
            Sort order:
             * default - sort by date (for Events), sort by number of resources (for Content Providers) otherwise sort by title (default).
             * new - Sort by when the entry was created.
             * mod - Sort by when the entry was last modified.
             * rel - Sort by search query relevance.
             * early - Sort by date, earliest to latest (Events only).
             * late - Sort by date, latest to earliest (Events only).
          schema:
            type: string
            enum:
              - early
              - late
              - rel
              - mod
              - new
        - name: content_provider[]
          in: query
          description: Filter by content provider name.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: keywords[]
          in: query
          description: Filter by keywords.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: node[]
          in: query
          description: Filter by ELIXIR node name.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: scientific_topics[]
          in: query
          description: Filter by scientific topics.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: operations[]
          in: query
          description: Filter by operations.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: target_audience[]
          in: query
          description: Filter by who the intended target audience is.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: tools[]
          in: query
          description: Filter by what tools are involved.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: event_types[]
          in: query
          description: Filter by event type.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - Awards and prizegivings
                - Meetings and conferences
                - Receptions and networking
                - Workshops and courses
        - name: city[]
          in: query
          description: Filter by city.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: country[]
          in: query
          description: Filter by country.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: venue[]
          in: query
          description: Filter by venue
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: organizer[]
          in: query
          description: Filter by organizer.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: online
          in: query
          description: Only show events with online access?
          schema:
            type: boolean
        - name: sponsor[]
          in: query
          description: Filter by sponsor.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: include_expired
          in: query
          description: Include events that have finished.
          schema:
            type: boolean
        - name: include_disabled
          in: query
          description: Include events that are disabled.
          schema:
            type: boolean
      responses:
        200:
          description: A collection of events, and facets available to filter them.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EventCollection'
  /events/{slug}:
    get:
      tags:
        - events
      parameters:
        - name: slug
          in: path
          description: The _slug_ id of an event e.g. python-training-2017
          required: true
          schema:
            type: string
      responses:
        200:
          description: A single event.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Event'
  /materials:
    get:
      tags:
        - materials
      parameters:
        - name: q
          in: query
          description: Search keywords.
          schema:
            type: string
        - name: page_number
          in: query
          description: The page of the collection to view.
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: The number of results to return per page.
          schema:
            type: integer
            default: 30
        - name: sort
          in: query
          description: |
            Sort order:
             * default - sort by date (for Events), sort by number of resources (for Content Providers) otherwise sort by title (default).
             * new - Sort by when the entry was created.
             * mod - Sort by when the entry was last modified.
             * rel - Sort by search query relevance.
             * early - Sort by date, earliest to latest (Events only).
             * late - Sort by date, latest to earliest (Events only).
          schema:
            type: string
            enum:
              - early
              - late
              - rel
              - mod
              - new
        - name: authors[]
          in: query
          description: Filter by author.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: content_provider[]
          in: query
          description: Filter by content provider name.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: contributors[]
          in: query
          description: Filter by contributor.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: difficulty_level[]
          in: query
          description: Filter by difficulty level.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - Not specified
                - Beginner
                - Intermediate
                - Advanced
        - name: keywords[]
          in: query
          description: Filter by keywords.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: licence[]
          in: query
          description: Filter by licence. Uses SPDX identifiers.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: node[]
          in: query
          description: Filter by ELIXIR node name.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: scientific_topics[]
          in: query
          description: Filter by scientific topics.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: operations[]
          in: query
          description: Filter by operations.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: target_audience[]
          in: query
          description: Filter by who the intended target audience is.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: tools[]
          in: query
          description: Filter by what tools are involved.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: resource_type[]
          in: query
          description: Filter by resource type, e.g. "Lecture" etc.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: A collection of materials, and facets available to filter them.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaterialCollection'
  /materials/{slug}:
    get:
      tags:
        - materials
      parameters:
        - name: slug
          in: path
          description: The _slug_ id of a material e.g. python-tutorial
          required: true
          schema:
            type: string
      responses:
        200:
          description: A single material.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Material'
  /content_providers:
    get:
      tags:
        - content providers
      parameters:
        - name: q
          in: query
          description: Search keywords.
          schema:
            type: string
        - name: page_number
          in: query
          description: The page of the collection to view.
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: The number of results to return per page.
          schema:
            type: integer
            default: 30
        - name: sort
          in: query
          description: |
            Sort order:
             * default - sort by date (for Events), sort by number of resources (for Content Providers) otherwise sort by title (default).
             * new - Sort by when the entry was created.
             * mod - Sort by when the entry was last modified.
             * rel - Sort by search query relevance.
             * early - Sort by date, earliest to latest (Events only).
             * late - Sort by date, latest to earliest (Events only).
          schema:
            type: string
            enum:
              - early
              - late
              - rel
              - mod
              - new
        - name: keywords[]
          in: query
          description: Filter by keywords.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: node[]
          in: query
          description: Filter by ELIXIR node name.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: content_provider_type[]
          in: query
          description: Filter by content provider type.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - Portal
                - Organisation
                - Project
      responses:
        200:
          description: A collection of content providers, and facets available to
            filter them.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContentProviderCollection'
  /content_providers/{slug}:
    get:
      tags:
        - content providers
      parameters:
        - name: slug
          in: path
          description: The _slug_ id of a content provider e.g. goblet
          required: true
          schema:
            type: string
      responses:
        200:
          description: A single content provider.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContentProvider'
  /workflows:
    get:
      tags:
        - workflows
      parameters:
        - name: q
          in: query
          description: Search keywords.
          schema:
            type: string
        - name: page_number
          in: query
          description: The page of the collection to view.
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: The number of results to return per page.
          schema:
            type: integer
            default: 30
        - name: sort
          in: query
          description: |
            Sort order:
             * default - sort by date (for Events), sort by number of resources (for Content Providers) otherwise sort by title (default).
             * new - Sort by when the entry was created.
             * mod - Sort by when the entry was last modified.
             * rel - Sort by search query relevance.
             * early - Sort by date, earliest to latest (Events only).
             * late - Sort by date, latest to earliest (Events only).
          schema:
            type: string
            enum:
              - early
              - late
              - rel
              - mod
              - new
        - name: authors[]
          in: query
          description: Filter by author.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: contributors[]
          in: query
          description: Filter by contributor.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: difficulty_level[]
          in: query
          description: Filter by difficulty level.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - Not specified
                - Beginner
                - Intermediate
                - Advanced
        - name: keywords[]
          in: query
          description: Filter by keywords.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: licence[]
          in: query
          description: Filter by licence. Uses SPDX identifiers.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: scientific_topics[]
          in: query
          description: Filter by scientific topics.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: target_audience[]
          in: query
          description: Filter by who the intended target audience is.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: A collection of workflows, and facets available to filter them.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WorkflowCollection'
  /workflows/{slug}:
    get:
      tags:
        - workflows
      parameters:
        - name: slug
          in: path
          description: The _slug_ id of a workflow e.g. ember
          required: true
          schema:
            type: string
      responses:
        200:
          description: A single workflow.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Workflow'
  /users:
    get:
      tags:
        - users
      responses:
        200:
          description: A collection of users.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UserCollection'
  /users/{slug}:
    get:
      tags:
        - users
      parameters:
        - name: slug
          in: path
          description: The _slug_ id of a user e.g. niall.beard
          required: true
          schema:
            type: string
      responses:
        200:
          description: A single user.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User'
  /collections:
    get:
      tags:
        - collections
      parameters:
        - name: q
          in: query
          description: Search keywords.
          schema:
            type: string
        - name: page_number
          in: query
          description: The page of the collection index to view.
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: The number of results to return per page.
          schema:
            type: integer
            default: 30
        - name: sort
          in: query
          description: |
            Sort order:
             * default - sort by date (for Events), sort by number of resources (for Content Providers) otherwise sort by title (default).
             * new - Sort by when the entry was created.
             * mod - Sort by when the entry was last modified.
             * rel - Sort by search query relevance.
             * early - Sort by date, earliest to latest (Events only).
             * late - Sort by date, latest to earliest (Events only).
          schema:
            type: string
            enum:
              - early
              - late
              - rel
              - mod
              - new
        - name: keywords[]
          in: query
          description: Filter by keywords.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: A list of collections, and facets available to filter them.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CollectionCollection'
  /collections/{slug}:
    get:
      tags:
        - collections
      parameters:
        - name: slug
          in: path
          description: The _slug_ id of a collection e.g. some-collection
          required: true
          schema:
            type: string
      responses:
        200:
          description: A single collection.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Collection'
  /nodes:
    get:
      tags:
        - nodes
      parameters:
        - name: q
          in: query
          description: Search keywords.
          schema:
            type: string
        - name: page_number
          in: query
          description: The page of the node collection to view.
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: The number of results to return per page.
          schema:
            type: integer
            default: 30
        - name: sort
          in: query
          description: |
            Sort order:
             * default - sort by date (for Events), sort by number of resources (for Content Providers) otherwise sort by title (default).
             * new - Sort by when the entry was created.
             * mod - Sort by when the entry was last modified.
             * rel - Sort by search query relevance.
             * early - Sort by date, earliest to latest (Events only).
             * late - Sort by date, latest to earliest (Events only).
          schema:
            type: string
            enum:
              - early
              - late
              - rel
              - mod
              - new
        - name: keywords[]
          in: query
          description: Filter by keywords.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: A list of ELIXIR nodes, and facets available to filter them.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/NodeCollection'
  /nodes/{slug}:
    get:
      tags:
        - nodes
      parameters:
        - name: slug
          in: path
          description: The _slug_ id of a node e.g. belgium
          required: true
          schema:
            type: string
      responses:
        200:
          description: Details of an ELIXIR node.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Node'
components:
  schemas:
    Event:
      allOf:
        - $ref: '#/components/schemas/JsonApiResponse'
        - type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/EventResource'
    EventResource:
      allOf:
        - $ref: '#/components/schemas/ResourceObject'
        - type: object
          additionalProperties: false
          properties:
            attributes:
              $ref: '#/components/schemas/EventAttributes'
            relationships:
              type: object
              additionalProperties: false
              properties:
                user:
                  $ref: '#/components/schemas/SingleRelationshipObject'
                content-provider:
                  $ref: '#/components/schemas/OptionalRelationshipObject'
                nodes:
                  $ref: '#/components/schemas/MultiRelationshipObject'
                collections:
                  $ref: '#/components/schemas/MultiRelationshipObject'
                materials:
                  $ref: '#/components/schemas/MultiRelationshipObject'
            links:
              type: object
              additionalProperties: false
              allOf:
                - $ref: '#/components/schemas/Links'
                - type: object
                  additionalProperties: false
                  properties:
                    redirect:
                      type: string
                      description: A redirect to the actual event's URL, via TeSS.
    EventAttributes:
      type: object
      additionalProperties: false
      required:
        - title
        - url
      properties:
        slug:
          type: string
          nullable: true
          description: The "friendly" identifier of the event.
        title:
          type: string
          description: The title of the event.
        subtitle:
          type: string
          nullable: true
          description: The subtitle of the event.
        url:
          type: string
          description: The URL where the actual event can be found.
        organizer:
          type: string
          nullable: true
          description: The organization responsible for creating the event.
        description:
          type: string
          nullable: true
          description: A succinct description of what the event is about.
        start:
          type: string
          nullable: true
          description: The date and time at which the event starts.
          format: date
        end:
          type: string
          nullable: true
          description: The date and time at which the event ends.
          format: date
        sponsor:
          type: string
          nullable: true
          description: The person or organization that is sponsoring the event.
        venue:
          type: string
          nullable: true
          description: The name of the building where the event will be hosted.
        city:
          type: string
          nullable: true
          description: The city the where event will be hosted.
        country:
          type: string
          nullable: true
          description: The regional where county the event will be hosted.
        county:
          type: string
          nullable: true
          description: The name of country where the event will be hosted.
        postcode:
          type: string
          nullable: true
          description: The postcode of the venue hosting the event.
        latitude:
          type: string
          nullable: true
          description: The latitude co-ordinate of the event.
        longitude:
          type: string
          nullable: true
          description: The longitude co-ordinate of the event.
        created-at:
          type: string
          description: The date the event was first created on TeSS.
          format: date
        updated-at:
          type: string
          description: The date the event was last updated on TeSS.
          format: date
        keywords:
          type: array
          description: A series of freetext words used to describe an event.
          items:
            type: string
        event-types:
          type: array
          description: The category of the event. This could be a meeting or a course;
            or if unknown or neither, an event.
          items:
            type: string
        target-audience:
          type: array
          description: The intended audience of the event. This can includes things
            like scientific discpline and expertise level.
          items:
            type: string
        capacity:
          type: integer
          nullable: true
          description: The number of people allowed to attend the event.
        eligibility:
          type: array
          description: Various criteria require to participate in the event.
          items:
            type: string
        contact:
          type: string
          nullable: true
          description: The name and/or contact details of a person or institution
            organizing the event.
        host-institutions:
          type: array
          description: The institution physically hosting the event.
          items:
            type: string
        scientific-topics:
          type: array
          description: The classification of the event based on the EDAM ontology's
            topics branch.
          items:
            $ref: '#/components/schemas/OntologyTerm'
        operations:
          type: array
          description: The classification of the event based on the EDAM ontology's
            operations branch.
          items:
            $ref: '#/components/schemas/OntologyTerm'
        external-resources:
          type: array
          description: A list of external resources associated with this tool. These
            are largely tools from bio.tools, and standards, databases, and policies
            from biosharing.org - but can be anything.
          items:
            $ref: '#/components/schemas/ExternalResource'
        report:
          type: object
          additionalProperties: false
          properties:
            funding:
              type: string
              nullable: true
              description: Details on who funded the event.
            attendee-count:
              type: integer
              nullable: true
              description: The number of people who attended the event.
            applicant-count:
              type: integer
              nullable: true
              description: The number of people who applied to attend the event.
            trainer-count:
              type: integer
              nullable: true
              description: The number of trainers who were involved with the event.
            feedback:
              type: string
              nullable: true
              description: Notes, or a link to feedback for the event.
            notes:
              type: string
              nullable: true
              description: Miscellaneous notes on the event.
          description: An after-the-fact report of what happened at the event. Only
            visible to privileged users.
        fields:
          type: array
          description: ARDC Fields of Research codes that describe the event.
          items:
            type: string
        duration:
          type: string
          nullable: true
          description: How long the event lasts.
        timezone:
          type: string
          nullable: true
          description: The timezone in which the event takes place. e.g. Europe/Brussels
        sponsors:
          type: array
          description: Who sponsored, or funded the event.
          items:
            type: string
        online:
          type: boolean
          nullable: true
          description: Does the event take place online?
        presence:
          type: string
          nullable: true
          description: Is the event onsite (face-to-face), online or hybrid?
          enum:
            - onsite
            - online
            - hybrid
        cost-basis:
          type: string
          nullable: true
          description: Whether costs are incurred by the event, and who needs to pay
        cost-value:
          type: string
          nullable: true
          description: The cost of attending the event.
        cost-currency:
          type: string
          nullable: true
          description: The currency of the event's cost.
        recognition:
          type: string
          nullable: true
          description: A description of any qualifications, awards, certificates, diplomas, or other
            educational credentials that will be awarded on successful completion of the training event.
        learning-objectives:
          type: string
          nullable: true
          description: A description of what knowledge, skills, or abilities are gained from attending the event.
        prerequisites:
          type: string
          nullable: true
          description: A description of what knowledge attendees should have before attending the event.
        tech-requirements:
          type: string
          nullable: true
          description: What technical requirements (e.g. software, hardware) are needed for participants of the event.
        external-id:
          type: string
          nullable: true
          description: If the event is from an external source, this is the unique identifier of the event in that source.
        last-scraped:
          type: string
          nullable: true
          description: The date that the event was last harvested by TeSS.
          format: date
        scraper-record:
          type: boolean
          description: Was this event automatically harvested (as opposed to being submitted manually)?
    EventCollection:
      allOf:
        - $ref: '#/components/schemas/FacetedCollection'
        - type: object
          additionalProperties: false
          properties:
            data:
              minItems: 0
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/EventResource'
    Material:
      allOf:
        - $ref: '#/components/schemas/JsonApiResponse'
        - type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/MaterialResource'
    MaterialResource:
      allOf:
        - $ref: '#/components/schemas/ResourceObject'
        - type: object
          additionalProperties: false
          properties:
            attributes:
              $ref: '#/components/schemas/MaterialAttributes'
            relationships:
              type: object
              additionalProperties: false
              properties:
                user:
                  $ref: '#/components/schemas/SingleRelationshipObject'
                content-provider:
                  $ref: '#/components/schemas/OptionalRelationshipObject'
                nodes:
                  $ref: '#/components/schemas/MultiRelationshipObject'
                collections:
                  $ref: '#/components/schemas/MultiRelationshipObject'
                events:
                  $ref: '#/components/schemas/MultiRelationshipObject'
            links:
              $ref: '#/components/schemas/Links'
    MaterialAttributes:
      type: object
      additionalProperties: false
      properties:
        slug:
          type: string
          nullable: true
          description: The "friendly" identifier of the material.
        title:
          type: string
          description: The title of the material.
        url:
          type: string
          description: The URL where the actual material can be found.
        description:
          type: string
          description: A description of what the training material is about.
        doi:
          type: string
          nullable: true
          description: The DOI of the material (if it has one).
        remote-updated-date:
          type: string
          nullable: true
          description: The date the material was last updated on its original site.
          format: date
        remote-created-date:
          type: string
          nullable: true
          description: The date the material was first created on its original site.
          format: date
        created-at:
          type: string
          description: The date the material was first created on TeSS.
          format: date
        updated-at:
          type: string
          description: The date the material was last updated on TeSS.
          format: date
        keywords:
          type: array
          description: A list of freetext keywords to describe the material.
          items:
            type: string
        licence:
          type: string
          nullable: true
          description: The licence chosen to determine how the material may be re-used.
        difficulty-level:
          nullable: true
          type: string
          description: The difficulty level comprehension of the material requires.
            Can be Beginner, Intermediate, Advanced, or Not specified.
        authors:
          type: array
          description: A list of people who wrote or helped write the material.
          items:
            type: string
        contributors:
          type: array
          description: Any person who was not the author but contributed in some way.
            Maybe they produced some software used, reviewed the paper, or helped
            inspire the author.
          items:
            type: string
        target-audience:
          type: array
          description: The audience the material was intended for.
          items:
            type: string
        scientific-topics:
          type: array
          description: The classification of the material based on the EDAM ontology's
            topics branch.
          items:
            $ref: '#/components/schemas/OntologyTerm'
        operations:
          type: array
          description: The classification of the material based on the EDAM ontology's
            operations branch.
          items:
            $ref: '#/components/schemas/OntologyTerm'
        external-resources:
          type: array
          description: A list of external resources associated with this tool. These
            are largely tools from bio.tools, and standards, databases, and policies
            from biosharing.org - but can be anything.
          items:
            $ref: '#/components/schemas/ExternalResource'
        resource-type:
          type: array
          description: The type(s) of this training material, e.g. Video, Poster.
          items:
            type: string
        fields:
          type: array
          description: ARDC Fields of Research codes that describe the material.
          items:
            type: string
        version:
          type: string
          nullable: true
          description: The current version identifier of the training material.
        contact:
          type: string
          nullable: true
          description: The name and/or contact details of a person or institution
            responsible for this training material.
        prerequisites:
          type: string
          nullable: true
          description: A description of what knowledge attendees should have before accessing this training material.
        syllabus:
          type: string
          nullable: true
          description: The syllabus of this training, or an overview of the topics covered by the training material.
        learning-objectives:
          type: string
          nullable: true
          description: A description of what knowledge, skills, or abilities are gained from this training material.
        subsets:
          type: array
          description: Identifier URLs or DOIs for each subset of the training material.
          items:
            type: string
        date-created:
          type: string
          nullable: true
          description: The date that the training material was created.
          format: date
        date-modified:
          type: string
          nullable: true
          description: The date that the training material was last updated.
          format: date
        date-published:
          type: string
          nullable: true
          description: The date that the training material was published.
          format: date
        status:
          type: string
          nullable: true
          description: The status, or maturity, of the material.
        other-types:
          type: string
          nullable: true
        last-scraped:
          type: string
          nullable: true
          description: The date that the training material was last harvested by TeSS.
          format: date
        scraper-record:
          type: boolean
          description: Was this material automatically harvested (as opposed to being submitted manually)?
    MaterialCollection:
      allOf:
        - $ref: '#/components/schemas/FacetedCollection'
        - type: object
          additionalProperties: false
          properties:
            data:
              minItems: 0
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/MaterialResource'
    ContentProvider:
      allOf:
        - $ref: '#/components/schemas/JsonApiResponse'
        - type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/ContentProviderResource'
    ContentProviderResource:
      allOf:
        - $ref: '#/components/schemas/ResourceObject'
        - type: object
          additionalProperties: false
          properties:
            attributes:
              $ref: '#/components/schemas/ContentProviderAttributes'
            relationships:
              additionalProperties: false
              type: object
              properties:
                events:
                  $ref: '#/components/schemas/MultiRelationshipObject'
                materials:
                  $ref: '#/components/schemas/MultiRelationshipObject'
            links:
              $ref: '#/components/schemas/Links'
    ContentProviderAttributes:
      type: object
      additionalProperties: false
      properties:
        slug:
          type: string
          nullable: true
          description: The "friendly" identifier of the content provider.
        title:
          type: string
          description: The title of the content provider.
        description:
          type: string
          nullable: true
          description: A description of the content provider.
        url:
          type: string
          nullable: true
          description: The URL to the content provider's website.
        image-url:
          type: string
          nullable: true
          description: A URL to an image of the content provider's logo.
        keywords:
          type: array
          description: A list of freetext keywords to describe the content provider.
          items:
            type: string
        created-at:
          type: string
          description: The date the content provider was first created on TeSS.
          format: date
        updated-at:
          type: string
          description: The date the content provider was last updated on TeSS.
          format: date
        contact:
          type: string
          nullable: true
          description: A point of contact for this content provider.
    ContentProviderCollection:
      allOf:
        - $ref: '#/components/schemas/FacetedCollection'
        - type: object
          additionalProperties: false
          properties:
            data:
              minItems: 0
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/ContentProviderResource'
    User:
      allOf:
        - $ref: '#/components/schemas/JsonApiResponse'
        - type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/UserResource'
    UserResource:
      allOf:
        - $ref: '#/components/schemas/ResourceObject'
        - type: object
          additionalProperties: false
          properties:
            attributes:
              $ref: '#/components/schemas/UserAttributes'
            links:
              $ref: '#/components/schemas/Links'
    UserAttributes:
      type: object
      additionalProperties: false
      properties:
        slug:
          type: string
          nullable: true
          description: The "friendly" identifier of the user.
        username:
          type: string
          description: The user's TeSS username.
        firstname:
          type: string
          nullable: true
          description: The user's first, or given, name.
        surname:
          type: string
          nullable: true
          description: The user's last, or family, name.
        created-at:
          type: string
          description: The date the user registered on TeSS.
          format: date
        updated-at:
          type: string
          description: The date the user last updated their profile on TeSS.
          format: date
    UserCollection:
      allOf:
        - $ref: '#/components/schemas/JsonApiResponse'
        - type: object
          additionalProperties: false
          properties:
            data:
              minItems: 0
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/UserResource'
    Workflow:
      allOf:
        - $ref: '#/components/schemas/JsonApiResponse'
        - type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/WorkflowResource'
    WorkflowResource:
      allOf:
        - $ref: '#/components/schemas/ResourceObject'
        - type: object
          additionalProperties: false
          properties:
            attributes:
              $ref: '#/components/schemas/WorkflowAttributes'
            relationships:
              type: object
              additionalProperties: false
              properties:
                user:
                  $ref: '#/components/schemas/SingleRelationshipObject'
            links:
              $ref: '#/components/schemas/Links'
    WorkflowAttributes:
      type: object
      additionalProperties: false
      properties:
        slug:
          type: string
          nullable: true
          description: The "friendly" identifier of the workflow.
        title:
          type: string
          description: The title of the workflow.
        description:
          type: string
          description: A succinct description of what the workflow is about.
        workflow-content:
          type: object
          properties: {}
          additionalProperties: true
          description: The cytoscape.js JSON structure describing the workflow.
        doi:
          type: string
          description: The DOI of the workflow.
        created-at:
          type: string
          description: The date the workflow was first created on TeSS.
          format: date
        updated-at:
          type: string
          description: The date the workflow was last updated on TeSS.
          format: date
        keywords:
          type: array
          description: A list of freetext keywords to describe the workflow.
          items:
            type: string
        licence:
          type: string
          description: The licence chosed to determine how the workflow may be re-used.
        difficulty-level:
          type: string
          description: The difficulty level comprehension of the workflow requires.
            Can be Beginner, Intermediate, Advanced, or Not specified.
        authors:
          type: array
          description: A list of people who wrote or helped write the workflow.
          items:
            type: string
        contributors:
          type: array
          description: Any person who was not the author but contributed in some way.
            Maybe they produced some software used, reviewed the paper, or helped
            inspire the author.
          items:
            type: string
        target-audience:
          type: array
          description: The audience the workflow was intended for.
          items:
            type: string
        scientific-topics:
          type: array
          description: The classification of the workflow based on the EDAM ontology's
            topics branch.
          items:
            $ref: '#/components/schemas/OntologyTerm'
    WorkflowCollection:
      allOf:
        - $ref: '#/components/schemas/FacetedCollection'
        - type: object
          additionalProperties: false
          properties:
            data:
              minItems: 0
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/WorkflowResource'
    Collection:
      allOf:
        - $ref: '#/components/schemas/JsonApiResponse'
        - type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/CollectionResource'
    CollectionResource:
      allOf:
        - $ref: '#/components/schemas/ResourceObject'
        - type: object
          additionalProperties: false
          properties:
            attributes:
              $ref: '#/components/schemas/CollectionAttributes'
            relationships:
              type: object
              additionalProperties: false
              properties:
                events:
                  $ref: '#/components/schemas/MultiRelationshipObject'
                materials:
                  $ref: '#/components/schemas/MultiRelationshipObject'
            links:
              $ref: '#/components/schemas/Links'
    CollectionAttributes:
      type: object
      additionalProperties: false
      required:
        - title
      properties:
        slug:
          type: string
          nullable: true
          description: The "friendly" identifier of the collection.
        title:
          type: string
          description: The title of the collection.
        description:
          type: string
          description: A description of the collection.
        image-url:
          type: string
          nullable: true
          description: A URL to an image of the collection's logo.
        keywords:
          type: array
          description: A list of freetext keywords to describe the collection.
          items:
            type: string
        created-at:
          type: string
          description: The date the collection was first created on TeSS.
          format: date
        updated-at:
          type: string
          description: The date the collection was last updated on TeSS.
          format: date
    CollectionCollection:
      allOf:
        - $ref: '#/components/schemas/FacetedCollection'
        - type: object
          additionalProperties: false
          properties:
            data:
              minItems: 0
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/CollectionResource'
    Node:
      allOf:
        - $ref: '#/components/schemas/JsonApiResponse'
        - type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/NodeResource'
    NodeResource:
      allOf:
        - $ref: '#/components/schemas/ResourceObject'
        - type: object
          additionalProperties: false
          properties:
            attributes:
              $ref: '#/components/schemas/NodeAttributes'
            relationships:
              type: object
              additionalProperties: false
              properties:
                events:
                  $ref: '#/components/schemas/MultiRelationshipObject'
                materials:
                  $ref: '#/components/schemas/MultiRelationshipObject'
                content-providers:
                  $ref: '#/components/schemas/MultiRelationshipObject'
            links:
              $ref: '#/components/schemas/Links'
    NodeAttributes:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        slug:
          type: string
          nullable: true
          description: The "friendly" identifier of the node.
        name:
          type: string
          description: The name of the node.
        member-status:
          type: string
          nullable: true
          description: Whether the node is a member or observer of ELIXIR.
          enum:
            - Member
            - Observer
        country-code:
          type: string
          nullable: true
          description: The ISO 3166-1 alpha-2 code of the country this node represents.
        home-page:
          type: string
          nullable: true
          description: A URL to the node's home page.
        staff:
          type: array
          description: A list of staff members belonging to this node.
          minItems: 0
          items:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
                description: The name of the staff member.
              role:
                type: string
                description: The role of the staff member within the node.
              email:
                type: string
                description: The staff member's contact email address.
        twitter:
          type: string
          nullable: true
          description: The node's twitter handle.
        created-at:
          type: string
          description: The date the node was first created on TeSS.
          format: date
        updated-at:
          type: string
          description: The date the node was last updated on TeSS.
          format: date
    NodeCollection:
      allOf:
        - $ref: '#/components/schemas/FacetedCollection'
        - type: object
          additionalProperties: false
          properties:
            data:
              minItems: 0
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/NodeResource'
    FacetedCollection:
      allOf:
        - $ref: '#/components/schemas/JsonApiResponse'
        - type: object
          additionalProperties: false
          properties:
            data:
              type: array
            meta:
              type: object
              additionalProperties: false
              properties:
                results-count:
                  type: integer
                  description: The total number of results in the collection.
                query:
                  type: string
                  description: Search keywords.
                  default: ""
                facets:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: string
                  description: The filters that are currently applied to the collection.
                available-facets:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      $ref: '#/components/schemas/Facet'
                  description: The set of filters that are available to be applied to
                    the collection.
            links:
              type: object
              additionalProperties: false
              allOf:
                - $ref: '#/components/schemas/Links'
                - $ref: '#/components/schemas/PaginationLinks'
    OntologyTerm:
      type: object
      additionalProperties: false
      properties:
        preferred-label:
          type: string
        uri:
          type: string
    ExternalResource:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
          description: The title of the external resource
        url:
          type: string
          description: A URL that resolves to a description of an external resource
            or the external resource itself.
        created-at:
          type: string
          description: The date the association was created between this resource
            and the external resource within TeSS.
          format: date
        updated-at:
          type: string
          description: The date the association was last updated between this resource
            and the external resource within TeSS.
          format: date
        api-url:
          type: string
          nullable: true
          description: A URL that resolves to more information about the external
            resource represented in a common exchange format (e.g. JSON or XML).
        type:
          type: string
          description: The type of external resource. This can be 'tool', 'database,
            policy or standard' for bio.tools and FAIRsharing respectively or any
            other resource type name for other external resources.
    Facet:
      type: object
      additionalProperties: false
      properties:
        value:
          type: string
        count:
          type: integer
    JsonApiResponse:
      type: object
      additionalProperties: false
      properties:
        errors:
          type: object
          properties: {}
        meta:
          type: object
          properties: {}
        links:
          type: object
          properties: {}
        included:
          type: object
          properties: {}
        jsonapi:
          type: object
          properties: {}
    ResourceObject:
      allOf:
        - $ref: '#/components/schemas/ResourceIdentifierObject'
        - type: object
          properties:
            attributes:
              type: object
              properties: {}
            relationships:
              type: object
              properties: {}
            links:
              $ref: '#/components/schemas/Links'
    ResourceIdentifierObject:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
    OptionalResourceIdentifierObject:
      type: object
      nullable: true
      properties:
        id:
          type: string
        type:
          type: string
    SingleRelationshipObject:
      type: object
      properties:
        links:
          type: object
          properties: {}
        data:
          $ref: '#/components/schemas/ResourceIdentifierObject'
        meta:
          type: object
          properties: {}
    OptionalRelationshipObject:
      type: object
      properties:
        links:
          type: object
          properties: {}
        data:
          $ref: '#/components/schemas/OptionalResourceIdentifierObject'
        meta:
          type: object
          properties: {}
    MultiRelationshipObject:
      type: object
      properties:
        links:
          type: object
          properties: {}
        data:
          type: array
          items:
            $ref: '#/components/schemas/ResourceIdentifierObject'
        meta:
          type: object
          properties: {}
    Links:
      type: object
      properties:
        self:
          type: string
          description: The URL of the current resource or collection.
    PaginationLinks:
      type: object
      properties:
        prev:
          type: string
          description: The previous page of the collection.
        next:
          type: string
          description: The next page of the collection.
        first:
          type: string
          description: The first page of the collection.
        last:
          type: string
          description: The final page of the collection.
  parameters:
    query:
      name: q
      in: query
      description: Search keywords.
      schema:
        type: string
    page_number:
      name: page_number
      in: query
      description: The page of the collection to view.
      schema:
        type: integer
        default: 1
    page_size:
      name: page_size
      in: query
      description: The number of results to return per page.
      schema:
        type: integer
        default: 30
    sort:
      name: sort
      in: query
      description: |
        Sort order:
         * default - sort by date (for Events), sort by number of resources (for Content Providers) otherwise sort by title (default).
         * new - Sort by when the entry was created.
         * mod - Sort by when the entry was last modified.
         * rel - Sort by search query relevance.
         * early - Sort by date, earliest to latest (Events only).
         * late - Sort by date, latest to earliest (Events only).
      schema:
        type: string
        enum:
          - early
          - late
          - rel
          - mod
          - new
    content-provider:
      name: content_provider[]
      in: query
      description: Filter by content provider name.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    keywords:
      name: keywords[]
      in: query
      description: Filter by keywords.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    node:
      name: node[]
      in: query
      description: Filter by ELIXIR node name.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    scientific-topics:
      name: scientific_topics[]
      in: query
      description: Filter by scientific topics.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    operations:
      name: operations[]
      in: query
      description: Filter by operations.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    target-audience:
      name: target_audience[]
      in: query
      description: Filter by who the intended target audience is.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    tools:
      name: tools[]
      in: query
      description: Filter by what tools are involved.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    difficulty-level:
      name: difficulty_level[]
      in: query
      description: Filter by difficulty level.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - Not specified
            - Beginner
            - Intermediate
            - Advanced
    authors:
      name: authors[]
      in: query
      description: Filter by author.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    contributors:
      name: contributors[]
      in: query
      description: Filter by contributor.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    licence:
      name: licence[]
      in: query
      description: Filter by licence. Uses SPDX identifiers.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
